version: '3.8'

services:
  # Frontend service
  frontend:
    image: ${DOCKER_USERNAME}/roomietasks-frontend:${TAG:-latest}
    ports:
      - "80:80"
    networks:
      - frontend-network
    depends_on:
      - user-service
      - task-service
    restart: unless-stopped

  # User management service
  user-service:
    image: ${DOCKER_USERNAME}/roomietasks-user-service:${TAG:-latest}
    environment:
      - NODE_ENV=production
      - JWT_SECRET=${JWT_SECRET}
      - DB_HOST=userdb
      - DB_USER=root
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=userdb
    networks:
      - frontend-network
      - user-service-network
    depends_on:
      - userdb
    restart: unless-stopped

  # Task management service
  task-service:
    image: ${DOCKER_USERNAME}/roomietasks-task-service:${TAG:-latest}
    environment:
      - NODE_ENV=production
      - JWT_SECRET=${JWT_SECRET}
      - DB_HOST=taskdb
      - DB_USER=root
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=taskdb
      - USER_SERVICE_URL=http://user-service:3000
    networks:
      - frontend-network
      - task-service-network
    depends_on:
      - taskdb
    restart: unless-stopped

  # User database
  userdb:
    image: mysql:8
    volumes:
      - userdb-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: userdb
    networks:
      - user-service-network
    restart: unless-stopped

  # Task database
  taskdb:
    image: mysql:8
    volumes:
      - taskdb-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: taskdb
    networks:
      - task-service-network
    restart: unless-stopped

networks:
  frontend-network:
    driver: bridge
  user-service-network:
    driver: bridge
  task-service-network:
    driver: bridge

volumes:
  userdb-data:
    name: roomietasks-userdb-data
  taskdb-data:
    name: roomietasks-taskdb-data